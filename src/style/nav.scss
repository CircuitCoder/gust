@import './fonts.scss';
@import './consts.scss';

$main-transition-length: 0.5s;
$shrink-transition-length: 0.3s;
$shift-delay: 0.2s;

@function square-border($outer, $width, $offset-x: 0, $offset-y: 0) {
  $neg-outer: calc(100% - #{$outer});
  $inner: $outer + $width;
  $neg-inner: calc(100% - #{$inner});

  // prettier-ignore
  @return polygon(
      // Outer ring
      $outer $outer, $outer $neg-outer, $neg-outer $neg-outer, $neg-outer $outer, $outer $outer,

      // Inner ring, with the inversed vertices ordering
      $inner $inner, $neg-inner $inner, $neg-inner $neg-inner, $inner $neg-inner, $inner $inner,

      // Return to begin
      $outer $outer,
  );
}

nav {
  position: fixed;
  top: 40px;
  left: calc(50vw - #{$extended-width/2});
}

$title-border-width: 40px;

.title {
  @include font-serif;
  font-weight: 100;
  padding: 24px + $title-border-width;

  pointer-events: none;

  width: 420px;
  height: 420px;
  display: inline-flex;
  align-items: center;
  justify-content: center;

  user-select: none;

  line-height: 144px;
  font-size: 144px;

  color: $primary;
  position: relative;

  > strong {
    font-weight: 900;
  }

  &::after {
    content: '';
    position: absolute;
    left: 0;
    right: 0;
    top: 0;
    bottom: 0;
    user-select: none;

    clip-path: square-border(0px, $title-border-width);
    transition: clip-path $main-transition-length ease;
    transition-delay: $shift-delay;

    $bg-tile: 60px;
    $bg-darker: change-color($primary, $alpha: 0.6);
    $bg-lighter: change-color($primary, $alpha: 0.2);

    background: linear-gradient(
      45deg,
      $bg-lighter 25%,
      $bg-darker 25%,
      $bg-darker 50%,
      $bg-lighter 50%,
      $bg-lighter 75%,
      $bg-darker 75%
    );
    background-size: $bg-tile $bg-tile;

    pointer-events: all;
  }

  &-inner {
    // Google font's Noto Serif has a wrong baseline setting
    transform: translateY(12px);
    display: inline-block;

    transition: transform $shrink-transition-length ease,
      opacity $shrink-transition-length ease;
    transition-delay: $main-transition-length + $shift-delay -
      $shrink-transition-length;
  }
}

nav.mini {
  .title {
    &-inner {
      transform: scale(0.4) translateY(12px);
      opacity: 0;
      transition-delay: 0s;
    }

    &::after {
      $outer: (420px - 120px) / 2;
      clip-path: square-border($outer, $title-border-width);
      transition-delay: 0s;

      cursor: pointer;
    }
  }
}

// Aux tile
.title-tile {
  position: relative;
  display: inline-flex;

  &-meta {
    position: relative;
    overflow: hidden;

    margin-left: 10px;
    background: grayscale($background);

    &::before {
      content: '';
      position: absolute;
      height: 100%;
      width: 100%;
      left: 0;
      right: 0;
      bottom: 0;
      transform: translateY(-100%) translateY(5px);
      background: grayscale($background);
      transition: transform $main-transition-length ease;
      transition-delay: $shift-delay;
    }

    &-inner {
      padding-top: 10px + 5px;
      width: 40px;
      line-height: 40px;
      font-size: 18px;

      display: flex;
      align-items: flex-end;
      justify-content: flex-start;

      @include font-monospace;
      text-transform: uppercase;
      writing-mode: vertical-rl;
      text-orientation: sideways;

      font-weight: 300;

      color: rgba(0, 0, 0, 0.38);

      user-select: none;

      strong {
        font-weight: 700;
      }

      transition: transform $main-transition-length ease,
        opacity $main-transition-length ease;
      transition-delay: $shift-delay;
    }

    transition: clip-path $main-transition-length ease,
      transform $main-transition-length ease;
    transition-delay: $shift-delay;
    clip-path: polygon(0 0, 100% 0, 100% 100%, 0 100%);
  }

  transition: transform $main-transition-length ease;
}

nav.mini {
  $outer-diff: (420px - 120px) / 2;
  .title-tile {
    &-meta {
      &::before {
        transform: translateY(-100%) translateY(120px);
        transition-delay: 0s;
      }

      &-inner {
        transform: translateY(115px); // 115 = 120 - 5
        opacity: 0;
        transition-delay: 0s;
      }

      clip-path: polygon(0 0, 100% 0, 100% 120px, 0 120px);
      transform: translate(-(420px - 120px)/2, (420px - 120px)/2);
      transition-delay: 0s;
    }

    transition-delay: $shift-delay;
    transform: translate(-$outer-diff, -$outer-diff);
  }
}
