@import './def.css';

@import './consts.scss';
@import './fonts.scss';
@import './nav.scss';
@import './markdown.scss';

* {
  box-sizing: inherit;
}

a {
  color: inherit;
  text-decoration: none;
}

html {
  scroll-behavior: smooth;
}

body {
  // CSS reset
  margin: 0;
  padding: 0 40px;
  height: 100vh;
  width: 100vw;
  box-sizing: border-box;

  // Default font settings
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;

  @include font-sans;

  // Real styling starts here
  background: $background;

  // Load animation
  transition: filter 0.5s ease-out, transform 0.5s ease-out,
    opacity 0.5s ease-out;
}

body.loaded {
  filter: none;
  opacity: 1;
  transform: none;
}

code {
  @include font-monospace;
  white-space: pre-wrap;
  word-break: break-all;
}

@mixin restricted-width {
  max-width: $extended-width;
  margin: 0 auto;
}

.main-wrapper {
  left: 0;
  top: 0;
  bottom: 0;
  right: 0;
  position: fixed;

  --full-width: 100vw;
  --full-height: 100vh;

  &-off {
    // TODO: use a capture scope event listner on body to filter the events
    // Then we may have universial scrolling events

    // Right now, scrolling is blocked by the nav
    pointer-events: none;
  }
}

main {
  @include restricted-width;
  display: flex;
}

// Scrollbar

@mixin thin-scrollbar {
  scrollbar-width: thin;
  scrollbar-color: change-color($primary, $alpha: 0.38) transparent;

  &::-webkit-scrollbar {
    height: 10px;
    width: 10px;
  }

  &::-webkit-scrollbar-thumb {
    background: change-color($primary, $alpha: 0.38);

    &:hover {
      background: change-color($primary, $alpha: 0.54);
    }
  }
}

.main-wrapper {
  @include thin-scrollbar;
  &-inner {
    height: 100%;
    position: relative;

    @include thin-scrollbar;
  }

  $root: &;
  &-off {
    &::-webkit-scrollbar-thumb {
      display: none;
    }
    #{$root}-inner {
      &::-webkit-scrollbar-thumb {
        display: none;
      }
    }
  }

  &-y {
    overflow-y: visible;
    overflow-x: scroll;

    #{$root}-inner {
      overflow-y: scroll;
      overflow-x: hidden;
    }
  }

  &-x {
    overflow-x: hidden;
    overflow-y: scroll;

    #{$root}-inner {
      overflow-x: scroll;
      overflow-y: hidden;
    }
  }
}

// Hitzone detection
.hitzone {
  position: absolute;
  top: 0;
  height: 10px;

  left: 0;
  width: 10px;

  pointer-events: none;
}

// Warning overlay
.unfinished-warning {
  position: fixed;
  left: 0;
  bottom: 0;
  right: 0;
  top: 0;
  z-index: 1000;
  transition: opacity 0.2s ease;
  backdrop-filter: blur(4px);
  background: rgba(0, 0, 0, 0.1);

  cursor: pointer;

  @media (min-width: 1320px) {
    & {
      pointer-events: none;
      opacity: 0;
    }
  }

  display: flex;
  align-items: center;
  justify-content: center;

  &-inner {
    cursor: default;
    width: 300px;
    background: white;
    box-shadow: rgba(0, 0, 0, 0.3) 0 4px 12px;
  }

  p {
    margin: 20px 30px 30px 30px;
  }

  img {
    width: 300px;
    height: 300px;
  }

  a {
    color: $primary;
    text-decoration: underline;
  }

  &-closed {
    pointer-events: none;
    opacity: 0;
  }
}

@import './home.scss';
@import './entry.scss';
